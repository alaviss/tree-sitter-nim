# Copyright 2022 Leorize <leorize+oss@disroot.org>
#
# SPDX-License-Identifier: MPL-2.0
# This Source Code Form is subject to the terms of the Mozilla Public License,
# v. 2.0. If a copy of the MPL was not distributed with this file, You can
# obtain one at https://mozilla.org/MPL/2.0/.

===================
Parenthesized calls
===================

echo(foo)
echo(1, foo, 3'f)
echo("Indentation",
     "doesn't matter")

echo("""long
text""")

echo(foo("Calls"), "in", bar("Calls"))

---

(source_file
  (call
    function: (identifier)
    arguments: (argument_list
      (identifier)))
  (call
    function: (identifier)
    arguments: (argument_list
      (integer_literal)
      (identifier)
      (float_literal)))
  (call
    function: (identifier)
    arguments: (argument_list
      (string_literal)
      (string_literal)))
  (call
    function: (identifier)
    arguments: (argument_list
      (string_literal)))
  (call
    function: (identifier)
    arguments: (argument_list
      (call
        function: (identifier)
        arguments: (argument_list
          (string_literal)))
      (string_literal)
      (call
        function: (identifier)
        arguments: (argument_list
          (string_literal))))))

=============
Command calls
=============

echo optarg 1, " ", singlearg 2

foo x,
    y, "string",
    w(call(some other))

---

(source_file
  (call
    function: (identifier)
    arguments: (argument_list
      (call
        function: (identifier)
        arguments: (argument_list
          (integer_literal)))
      (string_literal)
      (call
        function: (identifier)
        arguments: (argument_list
          (integer_literal)))))
  (call
    function: (identifier)
    arguments: (argument_list
      (identifier)
      (identifier)
      (string_literal)
      (call
        function: (identifier)
        arguments: (argument_list
          (call
            function: (identifier)
            arguments: (argument_list
              (call
                function: (identifier)
                arguments: (argument_list
                  (identifier))))))))))

================
Block statements
================

block: 10u32

block named: echo foo; echo bar

block:
  let x = 10

  foo(10)

let y = block:
  100

---

(source_file
  (block
    body: (statement_list
      (integer_literal)))
  (block
    name: (identifier)
    body: (statement_list
      (call
        function: (identifier)
        arguments: (argument_list
          (identifier)))
      (call
        function: (identifier)
        arguments: (argument_list
          (identifier)))))
  (block
    body: (statement_list
      (let_section
        (variable_declaration
          name: (identifier)
          value: (integer_literal)))
      (call
        function: (identifier)
        arguments: (argument_list
          (integer_literal)))))
  (let_section
    (variable_declaration
      name: (identifier)
      value: (block
        body: (statement_list
          (integer_literal))))))
